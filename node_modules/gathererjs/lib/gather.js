
var _ = require('lodash')
var rsvp = require('rsvp')
var util = require('./util')

module.exports = function(config) {

  var prefs = config.prefs || []
  var refs = config.refs
  var adapters = refs.map(function(ref) {
    return _.find(config.adapters, function(v, k) {
      return k == ref.adapter 
    })
  })

  var fetched = refs.map(function(ref, i) {
    return adapters[i].fetch(ref.id)
  })

  return rsvp.all(fetched).then(function(results) {
    return results.reduce(function(data, result, i) {
      var built = util.buildForAdapter(adapters[i], result.raw)
      return _.reduce(built, function(data, v, k) {

        (data._meta[k] || (data._meta[k] = []))

        if (typeof data[k] === 'undefined') {
          data[k] = v
          data._meta[k].push({ 
            expires: result.meta.expires,  
            source: result.meta.source,
            value: built[k]
          })
        }

        var pref = _.find(prefs, { prop: k })
        if (pref && pref.adapter == adapters[i].name) {
          data[k] = v
          data._meta[k].unshift({
            expires: result.meta.expires,  
            source: result.meta.source,
            value: built[k]
          })
        }

        return data
      }, data)
    }, { _meta: {} })
  })
}
